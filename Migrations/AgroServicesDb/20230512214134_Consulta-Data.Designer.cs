// <auto-generated />
using AgroServices.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgroServices.Migrations.AgroServicesDb
{
    [DbContext(typeof(AgroServicesDbContext))]
    [Migration("20230512214134_Consulta-Data")]
    partial class ConsultaData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgroServices.Models.Consulta", b =>
                {
                    b.Property<int>("ConsultaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaID"), 1L, 1);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublicacionID")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ConsultaID");

                    b.HasIndex("PublicacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("AgroServices.Models.Provincia", b =>
                {
                    b.Property<int>("ProvinciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinciaID"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinciaID");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("AgroServices.Models.Publicacion", b =>
                {
                    b.Property<int>("PublicacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicacionID"), 1L, 1);

                    b.Property<bool>("ClasificacionOferta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Titulo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("PublicacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("AgroServices.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Clasificacion")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.HasIndex("ProvinciaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AgroServices.Models.Valoracion", b =>
                {
                    b.Property<int>("ValoracionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValoracionID"), 1L, 1);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublicacionID")
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ValoracionID");

                    b.HasIndex("PublicacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Valoraciones");
                });

            modelBuilder.Entity("AgroServices.Models.Consulta", b =>
                {
                    b.HasOne("AgroServices.Models.Publicacion", "Publicaciones")
                        .WithMany("Consultas")
                        .HasForeignKey("PublicacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgroServices.Models.Usuario", "Usuarios")
                        .WithMany("Consultas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicaciones");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AgroServices.Models.Publicacion", b =>
                {
                    b.HasOne("AgroServices.Models.Usuario", "Usuarios")
                        .WithMany("Publicaciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AgroServices.Models.Usuario", b =>
                {
                    b.HasOne("AgroServices.Models.Provincia", "Provincias")
                        .WithMany("Usuarios")
                        .HasForeignKey("ProvinciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("AgroServices.Models.Valoracion", b =>
                {
                    b.HasOne("AgroServices.Models.Publicacion", "Publicaciones")
                        .WithMany("Valoraciones")
                        .HasForeignKey("PublicacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgroServices.Models.Usuario", "Usuarios")
                        .WithMany("Valoraciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publicaciones");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AgroServices.Models.Provincia", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AgroServices.Models.Publicacion", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Valoraciones");
                });

            modelBuilder.Entity("AgroServices.Models.Usuario", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Publicaciones");

                    b.Navigation("Valoraciones");
                });
#pragma warning restore 612, 618
        }
    }
}
